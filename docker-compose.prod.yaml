# docker-compose.yml
version: "3.12"
name: local

services:
  # --- MLflow tracking server + local artifact store ---
  mlflow:
    image: ghcr.io/mlflow/mlflow:v3.3.2
    command: >
      mlflow server
      --host 0.0.0.0 --port ${MLFLOW_INTERNAL_PORT}
      --backend-store-uri sqlite:////mlflowdb/mlflow.db
      --serve-artifacts
      --artifacts-destination file:///mlartifacts
    ports:
      - "${MLFLOW_SERVICE_PORT}:${MLFLOW_INTERNAL_PORT}"   # external:internal
    volumes:
      - mlflowdb:/mlflowdb
      - mlartifacts:/mlartifacts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_INTERNAL_PORT}/health"]
      interval: 5s
      timeout: 3s
      retries: 3

  # --- Serve image (for testing) ---

  # --- Caddy reverse proxy (fixed public port) ---
  proxy:
    image: caddy:2
    container_name: proxy
    # 9000 is the single public port users will call
    ports:
      - "${PROXY_PORT}:9000"
      - "2019:2019"
    environment:
      - CADDY_ADMIN=0.0.0.0:2019   # enable Admin API (router uses http://proxy:2019)
    depends_on:
      - mlflow

  # --- Router (control plane: train + roll + proxy flip) ---
  router:
    build:
      context: ./router
    environment:
      - SPECS_PATH=/app/specs
      - MLFLOW_TRACKING_URI=http://mlflow:${MLFLOW_INTERNAL_PORT}
      - DOCKER_HOST=http://socket-proxy:2375
    volumes:
      - router_state:/state
    ports:
      - "${LOCAL_PORT}:8000"    # router API
    depends_on:
      - mlflow
      - socket-proxy
      - proxy


  # --- Docker socket proxy (restrict routerâ€™s Docker access) ---
  socket-proxy:
    image: tecnativa/docker-socket-proxy:latest
    privileged: true
    environment:
      - CONTAINERS=1
      - NETWORKS=1
      - POST=1
      - INFO=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mlflowdb:
  mlartifacts:
  router_state:
